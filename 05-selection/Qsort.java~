import java.io.*;
import java.util.*;

public class Qsort {
    private int[] a;

    public Qsort(int[] array) {
	a = array;
    }

    public String toString() {
	String ret = "[";
	for (int i = 0; i < a.length; i++) {
	    ret = ret + a[i] + ", ";
	}
	ret = ret.substring(0,ret.length() - 2) + "]";
	return ret;
    }

    // --Select using in place
    public int[] qsort(int[] A, int k, int low, int high) {
        if (
	int pivotind = low;
	int li = low;
	int hi = high;
	int swap;
	int pivot = A[pivotind];
	A[pivotind] = A[hi];
	A[hi] = pivot;
	hi--;
	while (li < hi) {
	    if (A[li] < pivot) {
	        li++;
		if (li == hi) {
		    li++;
		    hi++;
		}
	    } else if (A[li] > pivot) {
		swap = A[li];
		A[li] = A[hi];
		A[hi] = swap;
		hi--;
	    }
	    if (li == hi) {
		A[high] = A[li];
		A[li] = pivot;
	    }
	}
	if (li == k) {
	    return A[li];
	} else if (li > k) {
	    return qsort(A, k, low, li - 1);
	} else {
	    return qsort(A, k, li + 1, high);
	}
    }

    public int[] sort() {
	return qsort(a, 4, 0, ai.length - 1);
    }
    
    public static void main(String[] args) {
	int[] ai = new int[]{7,2,8,3,9,6,1,0,5,4};
	Qsort s = new Qsort(ai);
	System.out.println(s.select(ai, 4, 0, ai.length - 1));
	//s.select(ai, 4, 0, ai.length - 1);
    }
}
